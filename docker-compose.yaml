# This file is part of the payment API proxy project.
# 'nodeX', 'nodeY', representing the payment API proxy nodes, are designed to handle requests and route them to the appropriate payment processor.
services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - node1
      - node2
    networks:
      - backend
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 40MB

  node1: &node-pointer
    hostname: node1
    image: sfidencio/payment-api-proxy:latest
    container_name: node1
    environment:
      - APP_PORT=8080
      - PROCESSOR_DEFAULT=http://payment-processor-default:8080
      - PROCESSOR_FALLBACK=http://payment-processor-fallback:8080
      - ENABLE_LOGGING=false
      - HTTP_CLIENT_CONNECT_TIMEOUT=5000
      - HTTP_CLIENT_POOL_SIZE=1000
      - PROCESSOR_CONSUMER_INSTANCES=2
      - POSTGRES_DB=paymentdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pay@@!
      - POSTGRES_HOST=pgsql
      - POSTGRES_PORT=5432
      - MAX_RETRIES_REENQUEUE=3
      - POSTGRES_MAX_POOL_SIZE=10
    networks:
      - backend
      - payment-processor
    ulimits:
      nofile:
        soft: 1024
        hard: 1024
    oom_score_adj: -1000
    sysctls:
      net.core.somaxconn: 256
      net.ipv4.tcp_tw_reuse: 1
    ports:
      - "8081:8080"
    depends_on:
      pgsql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 110MB

  node2:
    <<: *node-pointer
    hostname: node2
    container_name: node2
    ports:
      - "8082:8080"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 110MB

  pgsql:
    image: postgres:16-alpine
    hostname: pgsql
    container_name: pgsql
    networks:
      - backend
      - payment-processor
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pay@@!
    ports:
      - "5434:5432"
    restart: always
    command: ["/bin/sh", "-c", "rm -rf /var/lib/postgresql/data/* && exec docker-entrypoint.sh postgres -c max_connections=20 -c shared_buffers=12MB -c work_mem=512kB -c maintenance_work_mem=2MB -c effective_cache_size=32MB"]
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 90MB

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true